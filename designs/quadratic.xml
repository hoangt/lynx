<design name="quadratic">
  
  <module type="mult_x" name="multx_inst">
    
	<parameter name="WIDTH" value="16"/>
	
	<port direction="input" width="16" name="i_x"/>
	<port direction="input" width="1" name="i_valid_in"/>
	<port direction="output" width="1" name="i_ready_out"/>
	
	<port direction="output" width="16" name="o_y"/>
	<port direction="output" width="1" name="o_valid_out"/>
	<port direction="input" width="1" name="o_ready_in"/>
	
  </module>
  
  <module type="mult_a" name="multa_inst">
    
	<parameter name="WIDTH" value="16"/>
	
	<port direction="input" width="16" name="i_x"/>
	<port direction="input" width="1" name="i_valid_in"/>
	<port direction="output" width="1" name="i_ready_out"/>
	
	<port direction="output" width="16" name="o_y"/>
	<port direction="output" width="1" name="o_valid_out"/>
	<port direction="input" width="1" name="o_ready_in"/>
	
  </module>
  <module type="add_c" name="addc_inst">
    
	<parameter name="WIDTH" value="16"/>
	
	<port direction="input" width="16" name="i_x"/>
	<port direction="input" width="1" name="i_valid_in"/>
	<port direction="output" width="1" name="i_ready_out"/>
	
	<port direction="output" width="16" name="o_y"/>
	<port direction="output" width="1" name="o_valid_out"/>
	<port direction="input" width="1" name="o_ready_in"/>
	
  </module>
  
  <!-- Must parse modules before connections and interfaces, can remove that restriction later -->
  
  <!-- Connections -->
  
  <connection start="multx_inst.o_y" end="multa_inst.i_x"/>
  <connection start="multx_inst.o_valid_out" end="multa_inst.i_valid_in"/>
  <connection start="multa_inst.i_ready_out" end="multx_inst.o_ready_in"/>
  
  <connection start="multa_inst.o_y" end="addc_inst.i_x"/>
  <connection start="multa_inst.o_valid_out" end="addc_inst.i_valid_in"/>
  <connection start="addc_inst.i_ready_out" end="multa_inst.o_ready_in"/>
  
  <!-- interfaces -->
  
  <interface port="multx_inst.i_x" direction="input" name="x_in"/>
  <interface port="multx_inst.i_valid_in" direction="input" name="i_valid_in"/>
  <interface port="multx_inst.i_ready_out" direction="output" name="i_ready_out"/>
  
  <interface port="addc_inst.o_y" direction="output" name="o_y"/>
  <interface port="addc_inst.o_valid_out" direction="output" name="o_valid_out"/>
  <interface port="addc_inst.o_ready_in" direction="input" name="o_ready_in"/>
  
  <!-- At some point could make all names optional, and can derive names based on types/directions automatically -->
  
</design>
